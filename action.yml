name: 'Preview Pull Requests in Google Kubernetes Service'
description: 'A Github Action to deploy moleculer app preview of Pull Requests to GKE - Google Kubernetes Engine using Moleculer Helm charts ðŸš€'
author: 'Mahmoud Almasri'
inputs:
  command:
    required: true
    default: 'deploy'
    description: "Command to run"
    type: string
  BASE_URL:
    description: "Your base URL for your deployment"
    default: 'x.knawat.com'
    required: false
    type: string
  DNS_ZONE_NAME:
    description: "Your DNS Zone Name in GCP Cloud DNS"
    default: knawat-com
    required: false

  docker-file:
    required: false
    default: "Dockerfile"
    description: "Dockerfile to build, tag with preview metadata and publish to container registry"
  docker-registry:
    required: false
    default: "gcr.io"
    description: "Docker container registry. Defaults to GCP container registry"
  IMAGE_TAGS:
    required: false
    default: 'latest'	
    description: "Image tag"
  IMAGE_NAME:
    required: false
    default: knawat
    description: "Image repo name in GCP image registery "

  organization-name: 
    description: 'The name of the organization on Jira'
    required: false
    default: 'knawat'
  jira-token:  
    description: 'Jira Token'
    required: false

  GCP_PROJECT:
    description: 'GCP Project Name'
    required: true
    default: 'knawat'
  GCP_JSON_KEY:
    description: 'GCP JSON KEY'
    required: true

  SERVICES:
    description: 'The name of the moleculer services you want to deploy'
    required: false
    default: 'API, test'

if: github.event.inputs.command == "deploy"
runs:
  using: "composite"
  steps:
    - id: auth
      uses: google-github-actions/auth@v0.4.0
      with:
        credentials_json: ${{ inputs.GCP_JSON_KEY }}
    - id: get-credentials
      uses: google-github-actions/get-gke-credentials@v0.3.0
      with:
        cluster_name: ${{ inputs.cluster_name }}
        location: ${{ inputs.cluster_location }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.3.0

    - id: create-ip-address
      run: |
        gcloud compute addresses create $(echo $GITHUB_HEAD_REF | cut -f2 -d/)-${{github.event.issue.number}}-pr --global --ip-version IPV4
        echo "::set-output name=STATIC_IP_ADDRESS::$(gcloud compute addresses list --format json --filter "name=$(echo $GITHUB_HEAD_REF | cut -f2 -d/)-${{github.event.issue.number}}-pr" --format="get(address)")"
       
    - id: create-dns
      run: |
        gcloud dns record-sets create pr-${{github.event.issue.number}}.${{ inputs.BASE_URL }}. --rrdatas=${{steps.create-ip-address.outputs.STATIC_IP_ADDRESS}} --type=A --ttl=60 --zone=${{ inputs.DNS_ZONE_NAME }}

    - id: login-docker 
      name: Login to GCR
      uses: docker/login-action@v1
      with:
        registry: ${{ inputs.docker-registry }}
        username: _json_key
        password: ${{ inputs.GCP_JSON_KEY }}
    
    - id: docker-build-push
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: ${{ inputs.GCP_PROJECT }}/${{ inputs.IMAGE_REPO_NAME }}
        tags: ${{ inputs.GITHUB_SHA	}}
        dockerfile: ${{ inputs.docker-file }}
        registry: ${{ inputs.docker-registry }}
        username: _json_key
        password:  ${{ inputs.GCP_JSON_KEY }}
branding:
  icon: 'check-circle'  
  color: 'orange'